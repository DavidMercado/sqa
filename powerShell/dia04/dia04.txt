****REPASO SESSION1****

POWERSHELL PERFORMANCE ITs THE DLR???

QUE ES WSMAN???
	Definicion de un estandar que norma el acceso, protocolo, administracion
	a traves de http/s.

COMO TRABAJAN??
WSMAN - 
WINRM - TRABAJAR CON AUTENTICACION
POWERSHELL - 
TRUSTEDHOST - 

ABSTRACCION DE UN MODELO Y LLEVAR A UN TODO [PEQUENIOS COMPONENTES QUE TRABAJAN
COMO UN TODO]


****REPASO SESSION2****
UPDATE HELP
	* CORRER COMO ADMIN.
	* EL ATRIBUTO -FORCE -> FUERZA A SOBREESCRIBIR.
	* AL COPIAR DESDE UN FILE UNO TIENE MAS MODULOS QUE OTROS.
	* POWERSHELL X DEFECTO TIENE CORE MODULES.

COMMANDLET OF PROCESS
	* GET-COMMAND -NOUN "PROCESS"
		GET-COMMAND *PROCESS*

COMMANDLET OF WRITE EVENT-LOG
	* get-command -verb write -noun eventlog
		PRIMERO DECLARAR EL SOURCE.
		LUEGO ESCRIBIRLO.

COMMANDLET OF ALIASES
	* TODO ALIAS CREADO SE ELIMINA AL TERMINAR LA SESION
	[COMO GUARDAR UN ALIAS QUE PERDURE EN OTRAS SESIONES]

5. COMMANDLET OF EVENT LOG SECURITY
	* GET-EVENTLOG -LOGNAME SYSTEM -NEWEST

6. LIST OF SERVICE OF THE MACHINE REMOTE
	* INICIAR REMOTING, CREDENCIALES, EJECUTAR EL TASK Y SALIRSE
	GET-SERVICE -COMPUTERNAME HYPER

TIP: TODO COMMANDLET POR DEBAJO NOS DEVUELVE UN "OBJETO"


*****************
*********PIPELINE
*****************
	* TRABAJA SOBRE UNA COLECCION DE OBJETOS.
	* CAPTURA LA SALIDA DEL PRIMER COMMANDLET Y EJECUTA EL COMMANDLET
		SEGUNDO SOBRE LA SALIDA DEL PRIMERO.

	> GET-SERVICE ---> UNA COLECCION DE SERVICES
	> GET-SERVICE | WHERE-OBJECT -PROPERTY STATUS -EQ RUNNING
	> get-childitem | out-file -pspath d:\ps
		out-file --> commandlet para visualizar

	> GET-SERVICE -NAME BITS | FORMAT-LIST *
		[COMO SERIA VER QUE OBJETO ES]
	
	> GET-SERVICE | GM
	> GET-SERVICE | WHERE-OBJECT -PROPERTY NAME -EQ "BITS"
	> GET-SERVICE -NAME BITS
		UNO DEBE CONOCER LOS COMNADLETS Y SACAR VENTAJAS
		AMBOS HACEN LO MISMO, PERO EL DE -NAME ES MAS EFICIENTE

	> GET-SERVICE | GM --> GET-MEMBER
	TODO COMMANDLET TIENE ATRIBUTOS Y METODOS Y ALGUN QUE OTRO SCRIPT


*****************
**********SORTING
*****************
	WINDOWS - ES ORIENTADO A OBJETOS
		MODULO --> CLASE --> OBJETO

	LINUX - ES ORIENTADO A ARCHIVOS

	* ORDENAR EN BASE A UNA O MAS PROPIEDADES

	> GET-EVENTLOG -LOGNAME SYSTEM -NEWEST 5
	> GET-EVENTLOG SYSTEM -NEWEST 5 ---> POSITIONAL PARAMETER LOGNAME
	> GET-EVENTLOG -LOGNAME SYSTEM -NEWEST 5 | SORT-OBJECT -PROPERTY INSTANCEID

*****************
*********GROUPING
*****************
	* SIRVE PARA REALIZAR BUSQUEDA DE INFORMACION DE UN OBJETO

	> GET-SERVICE | GROUP-OBJECT -PROPERTY STATUS
		CREA DOS CONJUNTOS EN BASE A STATUS

	> $VAR = GET-SERVICE | GROUP-OBJECT -PROPERTY STATUS -ASHASHTABLE -ASSTRING
		QUE LOS AGRUPE Y QUE LOS MANEJE COMO TABLA Y CADENA --> ARREGLOS
	> $VAR.STOPPED

	> GET-SERVICE | GROUP-OBJECT -PROPERTY STATUS -NOELEMENT
		EXPLICACION MAS PRECISA SOBRE UN PARAMETRO ESPECIFICO [STATUS]

	> GET-PROCESS | WHERE-OBJECT -PROPERTY HANDLES -GT 84 | GROUP-OBJECT
		-PROPERTY HANDLES -NOELEMENT
		[AGRUPAR POR HANDLES QUE SEA MAYOR A 84]


	SELECCIONAR [SELECT-OBJECT]
	> GET-PROCESS | SELECT-OBJECT -PROPERTY STARTINFO, STARTIME, PROCESSNAME,
	TOTALPROCESSORTIME
		[AGRUPADO X VARIOS TRIBUTOS]

*********TIP****************
****************************
	OBTENGO LA COLECCION
	FILTRO LA COLECCION EN BASE A UN PARAMETRO
	AGRUPO LA COLECCION TB EN BASE A UN PARAMETRO


*********************************TAREA***************************************
*****************************************************************************
HAY COMMANDLETS QUE TIENEN UN PARAMETRO DENOMINADO "FILTERING"
AVERIGUAR SI EXISTE DIFERENCIA ENTRE "WHERE-OBJECT"